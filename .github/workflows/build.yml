name: Build
run-name: "Building Artifact (${{ github.event.inputs.ref }})"
on:
  workflow_call:

jobs:
  be-build:
    name: üõ†Ô∏è Build Backend Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: be-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Deps
        run: cd backend && npm i

      - name: Build
        run: cd backend && npm run build

      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact-${{ github.sha }}
          path: backend/build/

  be-lint:
    name: üïµÔ∏è Lint Backend Code
    needs: [be-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: be-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Lint the code
        run: cd backend && npm run lint

  be-test:
    name: üß™ Backend Unit Tests
    needs: [be-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: be-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Run Unit Tests
        run: cd backend && npm t

  be-security-audit:
    name: üõ°Ô∏è Audit Backend Packages for Security Vulnerabilities
    needs: [be-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for security issue
        run: cd backend && npm audit --omit=dev --audit-level=medium

  be-static-analysis:
    name: üî¨ Run Static Analysis on Backend Code
    needs: [be-build, be-lint, be-test, be-security-audit]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          config-file: ./.github/codeql/codeql.config.yml

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Deps
        run: cd backend && npm i

      - name: Build
        run: cd backend && npm run build

      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v1

  fe-build:
    name: üõ†Ô∏è Build Frontend Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: fe-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Deps
        run: cd frontend && npm i

      - name: Build
        run: |
          cd frontend && npm run build

      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifact-${{ github.sha }}
          path: frontend/build

  fe-security-audit:
    name: üõ°Ô∏è Audit Frontend Packages for Security Vulnerabilities
    needs: [fe-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for security issue
        run: cd frontend && npm audit --omit=dev --audit-level=critical

  fe-static-analysis:
    name: üî¨ Run Static Analysis on Frontend Code
    needs: [fe-security-audit]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          config-file: ./.github/codeql/codeql.config.yml

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Deps
        run: cd frontend && npm i

      - name: Build
        run: cd frontend && npm run build

      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v2

  trigger-deploy:
    name: üöö Start Deployment
    #if: github.ref == 'refs/heads/main' //normally enabled for main branch
    needs: [be-static-analysis, fe-static-analysis]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          inputs: '{ "ref": "${{ github.sha }}" }'