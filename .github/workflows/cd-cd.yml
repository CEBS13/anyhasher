name: CI/CD Pipeline
run-name: "üõ†Ô∏è ${{ github.event.head_commit.message }} (${{ github.sha }})"
on:
  push:
    branches:
      - olt

jobs:  
  build:
    name: üõ†Ô∏è Build Frontend Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: fe-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Deps
        run: cd frontend && npm i

      - name: Build/Compile
        run: |
          cd frontend && npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Store artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: frontend/build

  audit:
    name: üõ°Ô∏è Audit Frontend Packages
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check for security issue
        run: cd frontend && npm audit --production --audit-level=medium

  lint:
    name: üßº Ensure Code Style
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: fe-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Deps
        run: cd frontend && npm i
      
      - name: Check for security issue
        run: cd frontend && npm audit --production --audit-level=critical

  test:
    name: üß™ Run Unit Tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: fe-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Deps
        run: cd frontend && npm i
      
      - name: Run unit tests
        run: cd frontend && npm run test-ci

  static-analysis:
    name: üî¨ Run Static Code Analysis
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          config-file: ./.github/codeql/codeql.config.yml

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: fe-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install Deps
        run: cd frontend && npm i

      - name: Build
        run: cd frontend && npm run build

      - name: Perform Analysis
        uses: github/codeql-action/analyze@v2

  deploy: 
    name: üöö Deploy Frontend Artifact
    needs: [static-analysis,test,lint,audit]    
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        # NOTE: Uses the artifact that was stored in the "build" job.

  verify:
    name: üß™ Verify Successful Deployment
    needs:
      [deploy]
    runs-on: ubuntu-latest
    if: success()
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Frontend Smoke Test
        run: |
          export TEST_URL=https://bsommardahl.github.io/anyhasher/
          cd frontend/e2e
          npm install
          npm run smoke